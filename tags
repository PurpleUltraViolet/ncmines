!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/a3c87ab5/
$(DBUILD)/%.o	Makefile	/^$(DBUILD)\/%.o : $(DSRC)\/%.c$/;"	t
$(TARGET)	Makefile	/^$(TARGET) : $(OBJ)$/;"	t
.depend	Makefile	/^.depend : $(SRC)$/;"	t
BOARD_H_	include/board.h	/^#define BOARD_H_$/;"	d
CC	Makefile	/^CC = gcc$/;"	m
CELL_EMPTY	include/board.h	/^#define CELL_EMPTY /;"	d
CELL_MINE	include/board.h	/^#define CELL_MINE /;"	d
CFLAGS	Makefile	/^CFLAGS = -Wall -Wpedantic `pkg-config --cflags ncurses`$/;"	m
Controls	README.md	/^## Controls$/;"	s
DBIN	Makefile	/^DBIN = bin$/;"	m
DBUILD	Makefile	/^DBUILD = build$/;"	m
DESCRIPTION	ncmines.6	/^.SH DESCRIPTION$/;"	s	title:NCMINES
DIFFICULTIES	ncmines.6	/^.SH DIFFICULTIES$/;"	s	title:NCMINES
DIFFICULTY_EASY	include/gamestate.h	/^enum difficultylevel {DIFFICULTY_EASY, DIFFICULTY_MEDIUM, DIFFICULTY_HARD};$/;"	e	enum:difficultylevel
DIFFICULTY_HARD	include/gamestate.h	/^enum difficultylevel {DIFFICULTY_EASY, DIFFICULTY_MEDIUM, DIFFICULTY_HARD};$/;"	e	enum:difficultylevel
DIFFICULTY_MEDIUM	include/gamestate.h	/^enum difficultylevel {DIFFICULTY_EASY, DIFFICULTY_MEDIUM, DIFFICULTY_HARD};$/;"	e	enum:difficultylevel
DRAW_H_	include/draw.h	/^#define DRAW_H_$/;"	d
DSRC	Makefile	/^DSRC = src$/;"	m
Difficulties	README.md	/^## Difficulties$/;"	s
FLAG_COLORS	include/draw.h	/^#define FLAG_COLORS /;"	d
GAMESTATE_H_	include/gamestate.h	/^#define GAMESTATE_H_$/;"	d
INCLUDE	Makefile	/^INCLUDE = include$/;"	m
Installation	README.md	/^## Installation$/;"	s
LDFLAGS	Makefile	/^LDFLAGS = $/;"	m
LIB	Makefile	/^LIB = `pkg-config --libs ncurses`$/;"	m
MINE_COLORS	include/draw.h	/^#define MINE_COLORS /;"	d
NAME	Makefile	/^NAME = ncmines$/;"	m
NAME	ncmines.6	/^.SH NAME$/;"	s	title:NCMINES
NCMINES	ncmines.6	/^.TH NCMINES 6$/;"	t
OBJ	Makefile	/^OBJ = $(patsubst $(DSRC)\/%.c, $(DBUILD)\/%.o, $(SRC))$/;"	m
PREFIX	Makefile	/^PREFIX = \/usr$/;"	m
SRC	Makefile	/^SRC = $(wildcard $(DSRC)\/*.c)$/;"	m
SYNOPSYS	ncmines.6	/^.SH SYNOPSYS$/;"	s	title:NCMINES
TARGET	Makefile	/^TARGET = $(DBIN)\/$(NAME)$/;"	m
WARN_COLORS	include/draw.h	/^#define WARN_COLORS /;"	d
_endwin_wrapper	src/draw.c	/^void _endwin_wrapper(void) {$/;"	f	typeref:typename:void
all	Makefile	/^all: $(TARGET)$/;"	t
b	include/board.h	/^    struct board_cell_t *b;$/;"	m	struct:board_t	typeref:struct:board_cell_t *
b	include/gamestate.h	/^    struct board_t *b;$/;"	m	struct:gamestate_t	typeref:struct:board_t *
board_cell_t	include/board.h	/^struct board_cell_t {$/;"	s
board_del	src/board.c	/^void board_del(struct board_t *board) {$/;"	f	typeref:typename:void
board_new	src/board.c	/^struct board_t *board_new(long w, long h, long sx, long sy, int nmines) {$/;"	f	typeref:struct:board_t *
board_t	include/board.h	/^struct board_t {$/;"	s
board_uncover	src/board.c	/^int board_uncover(struct board_t *board, long x, long y) {$/;"	f	typeref:typename:int
clean	Makefile	/^clean :$/;"	t
difficultylevel	include/gamestate.h	/^enum difficultylevel {DIFFICULTY_EASY, DIFFICULTY_MEDIUM, DIFFICULTY_HARD};$/;"	g
drawend	src/draw.c	/^void drawend(struct gamestate_t *gs, char *msg) {$/;"	f	typeref:typename:void
drawgame	src/draw.c	/^void drawgame(struct gamestate_t *gs) {$/;"	f	typeref:typename:void
drawheader	src/draw.c	/^void drawheader(struct gamestate_t *gs) {$/;"	f	typeref:typename:void
exit_with_error	src/draw.c	/^void exit_with_error(int c, const char *format, ...) {$/;"	f	typeref:typename:void
flag	include/board.h	/^    char flag;$/;"	m	struct:board_cell_t	typeref:typename:char
gamestate_del	src/gamestate.c	/^void gamestate_del(struct gamestate_t *gs) {$/;"	f	typeref:typename:void
gamestate_new	src/gamestate.c	/^struct gamestate_t *gamestate_new(enum difficultylevel d) {$/;"	f	typeref:struct:gamestate_t *
gamestate_t	include/gamestate.h	/^struct gamestate_t {$/;"	s
gamestate_update	src/gamestate.c	/^void gamestate_update(struct gamestate_t *gs, char *should_drawgame,$/;"	f	typeref:typename:void
gamewin	src/draw.c	/^WINDOW *gamewin = NULL;$/;"	v	typeref:typename:WINDOW *
gtime	include/gamestate.h	/^    time_t gtime;$/;"	m	struct:gamestate_t	typeref:typename:time_t
h	include/board.h	/^    long w, h;$/;"	m	struct:board_t	typeref:typename:long
init	src/draw.c	/^void init(long w, long h) {$/;"	f	typeref:typename:void
install	Makefile	/^install: all$/;"	t
main	src/main.c	/^int main(int argc, char **argv) {$/;"	f	typeref:typename:int
mines_found	include/gamestate.h	/^    long mines_found;$/;"	m	struct:gamestate_t	typeref:typename:long
ncmines	README.md	/^# ncmines$/;"	c
nmines	include/board.h	/^    int nmines;$/;"	m	struct:board_t	typeref:typename:int
should_endwin	src/draw.c	/^char should_endwin = 0;$/;"	v	typeref:typename:char
started	include/gamestate.h	/^    char started;$/;"	m	struct:gamestate_t	typeref:typename:char
stime	include/gamestate.h	/^    time_t stime;$/;"	m	struct:gamestate_t	typeref:typename:time_t
titlewin	src/draw.c	/^WINDOW *titlewin = NULL;$/;"	v	typeref:typename:WINDOW *
uncovered	include/board.h	/^    char uncovered;$/;"	m	struct:board_cell_t	typeref:typename:char
use_color	src/draw.c	/^char use_color = 0;$/;"	v	typeref:typename:char
val	include/board.h	/^    char val;$/;"	m	struct:board_cell_t	typeref:typename:char
w	include/board.h	/^    long w, h;$/;"	m	struct:board_t	typeref:typename:long
x	include/gamestate.h	/^    long x, y;$/;"	m	struct:gamestate_t	typeref:typename:long
y	include/gamestate.h	/^    long x, y;$/;"	m	struct:gamestate_t	typeref:typename:long
